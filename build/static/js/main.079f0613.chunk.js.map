{"version":3,"sources":["Landing/Header/Header.js","Landing/Personal/Personal.js","Landing/Landing.js","screens/NotFound/Cube.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Jumbotron","Personal","Landing","Container","Cube","props","React","Component","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mTAGe,SAASA,IACpB,OACI,yBAAKC,UAAU,SAASC,GAAG,QACvB,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACtB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,SAAnB,yFACA,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBR,GAAG,oBAChB,kBAACS,EAAA,EAAD,CAAKV,UAAU,WACX,kBAACU,EAAA,EAAIC,KAAL,CAAUL,KAAK,SAAf,8CACA,kBAACI,EAAA,EAAIC,KAAL,CAAUL,KAAK,aAAf,wCACA,kBAACI,EAAA,EAAIC,KAAL,CAAUL,KAAK,SAAf,kCACA,kBAACI,EAAA,EAAIC,KAAL,CAAUL,KAAK,SAAf,yEAIZ,kBAACM,EAAA,EAAD,KACI,6CACA,iIACuB,6BADvB,+QAEyD,6BAFzD,w0BAGsK,6BAHtK,oxB,MCjBD,SAASC,IACpB,OACI,yBAAKb,UAAU,WAAWC,GAAG,YACzB,uBAAGD,UAAU,kBAAb,8wCAC+P,6BAAS,6BAAS,6BADjR,wcAIA,yBAAKA,UAAU,YACX,6BACI,uBAAGA,UAAU,mBAAb,uEACA,wBAAIA,UAAU,oBACV,4BAAI,uBAAGM,KAAK,0BAAR,IAAkC,uBAAGN,UAAU,gBACnD,4BAAI,uBAAGM,KAAK,wBAAuB,uBAAGN,UAAU,4BAChD,4BAAI,uBAAGM,KAAK,8BAA6B,uBAAGN,UAAU,oBACtD,4BAAI,uBAAGM,KAAK,+BAA8B,uBAAGN,UAAU,uBAG/D,6BACI,uBAAGA,UAAU,mBAAb,mHACA,wBAAIA,UAAU,oBACV,4BAAI,uBAAGM,KAAK,8BAA6B,uBAAGN,UAAU,uBACtD,4BAAI,uBAAGM,KAAK,0BAAyB,uBAAGN,UAAU,0BAG1D,6BACI,uBAAGA,UAAU,mBAAb,0FACA,wBAAIA,UAAU,mBACV,4BAAI,uBAAGM,KAAK,+BAA8B,uBAAGN,UAAU,uBACvD,4BAAI,uBAAGM,KAAK,8BAA6B,uBAAGN,UAAU,oBACtD,4BAAI,uBAAGM,KAAK,4BAA4BN,UAAU,QAA9C,a,YC5Bb,SAASc,IACpB,OACI,kBAACC,EAAA,EAAD,KACI,kBAAChB,EAAD,MACA,kBAACc,EAAD,O,4CCNSG,G,kBACjB,WAAYC,GAAQ,qEACVA,I,sEAGN,OACI,yBAAKjB,UAAU,QACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cACf,yBAAKA,UAAU,cACf,yBAAKA,UAAU,eACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,gBAEnB,yBAAKA,UAAU,aAAf,uB,GAfkBkB,IAAMC,Y,oBCazBC,MATf,WACE,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWT,IACjC,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,OAAOC,UAAWP,MCE1BQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCZNC,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAGFC,SAASC,eAAe,SDsHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.079f0613.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.sass';\r\nimport { Navbar, Nav, Jumbotron } from 'react-bootstrap';\r\nexport default function Header() {\r\n    return (\r\n        <div className=\"header\" id='home'>\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">Алексей Аксенов</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#home\">Главная</Nav.Link>\r\n                        <Nav.Link href=\"#personal\">Личное</Nav.Link>\r\n                        <Nav.Link href=\"#home\">Наука</Nav.Link>\r\n                        <Nav.Link href=\"#home\">Университет</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <Jumbotron>\r\n                <h1>Hello, world!</h1>\r\n                <p>\r\n                    Меня зовут Алексей.<br></br>\r\n                    Хотя если вы студент, для вас – Алексей Владимирович.<br></br>\r\n                    Это главная страница сайта, где собрана вся или почти вся информация, касающаяся меня, которую вам может потребоваться знать и которую я счел нужным предоставить.<br></br>\r\n\r\n                    Этот сайт находится в процессе постоянного обновления, переработки и наполнения. Ведь, как известно, совершенству нет предела (и прокрастинации – тоже).\r\n                 </p>\r\n            </Jumbotron>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './personal.sass';\r\n\r\nexport default function Personal() {\r\n    return (\r\n        <div className=\"personal\" id='personal'>\r\n            <p className=\"personal__text\">\r\n                Имею высшее образование, неоконченную степень кандидата технических наук. Увлекаюсь программированием, психологией, педагогикой, музыкой (когда-то – играть, теперь – слушать). Люблю чай, пешие прогулки и общество умных людей. Ненавижу – все остальное.<br></br><br></br><br></br>\r\n                У меня есть почта: me@этот_сайт. Также по сети разбросаны мои аккаунты в различных сервисах.\r\n            </p>\r\n            <div className=\"contacts\">\r\n                <div>\r\n                    <p className='contacts__title'>Захожу часто</p>\r\n                    <ul className=\"contacts__offten\">\r\n                        <li><a href=\"http://vk.com/aksenoff\"> <i className=\"fab fa-vk\"></i></a></li>\r\n                        <li><a href=\"http://t.me/aksenoff\"><i className=\"fab fa-telegram-plane\"></i></a></li>\r\n                        <li><a href=\"http://github.com/aksenoff\"><i className=\"fab fa-github\"></i></a></li>\r\n                        <li><a href=\"http://twitter.com/aksenoff\"><i className=\"fab fa-twitter\"></i></a></li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <p className='contacts__title'>Захожу не очень часто</p>\r\n                    <ul className=\"contacts__rarely\">\r\n                        <li><a href=\"http://instagr.am/aksenoff\"><i className=\"fab fa-instagram\"></i></a></li>\r\n                        <li><a href=\"http://fb.com/aksenoff\"><i className=\"fab fa-facebook-f\"></i></a></li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <p className='contacts__title'>Не захожу вообще</p>\r\n                    <ul className=\"contacts__never\">\r\n                        <li><a href=\"http://del.icio.us/aksenoff\"><i className=\"fab fa-delicious\"></i></a></li>\r\n                        <li><a href=\"http://aksenoff.tumblr.com\"><i className=\"fab fa-tumblr\"></i></a></li>\r\n                        <li><a href=\"http://habr.com/users/xnv\" className=\"habr\">HABR</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Header from './Header/Header';\r\nimport Personal from './Personal/Personal';\r\nimport {Container} from \"react-bootstrap\";\r\nexport default function Landing(){\r\n    return(\r\n        <Container>\r\n            <Header/>\r\n            <Personal />\r\n        </Container>\r\n    )\r\n}","import React from \"react\";\r\nimport './cube.sass'\r\nexport default class Cube extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return(\r\n            <div className='cube'>\r\n                <div className=\"container\">\r\n                    <div className=\"back side\"></div>\r\n                    <div className=\"left side\"></div>\r\n                    <div className=\"right side\"></div>\r\n                    <div className=\"top side\"></div>\r\n                    <div className=\"bottom side\"></div>\r\n                    <div className=\"front side\"></div>\r\n                </div>\r\n                <div className='not-found'>\r\n                    Page not found\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Landing from './Landing/Landing';\r\nimport Cube from \"./screens/NotFound/Cube\";\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/main.sass';\r\nfunction App() {\r\n  return (\r\n      <Switch>\r\n          <Route exact path='/' component={Landing}/>\r\n          <Route exact path='/404' component={Cube}/>\r\n      </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}